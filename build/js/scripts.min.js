var viewport={w:window.innerWidth||$(window).width(),h:window.innerHeight||$(window).height()};$(window).resize(function(){viewport={w:window.innerWidth||$(window).width(),h:window.innerHeight||$(window).height()}});var isMobile=function(){return viewport.w<768},isTablet=function(){return 768<=viewport.w&&viewport.w<=1024},isDesktop=function(){return 1024<viewport.w};function thumb_implantacao(){var e=$(".ficha").outerHeight();$(".ficha .galeria img").css("height",e)}function thumb_mapa(){var e=$(".localizacao").outerHeight();$(".localizacao .mapa img").css("height",e)}function texto_lazer(){var e=$(".lazer").outerHeight();$(".lazer .texto").css("height",e)}function thumbs_lazer(){var e=$(".lazer").outerHeight()/2;$(".lazer .galeria li img").css("height",e)}function link_chat(e,i,t){var o="PopChatDT('default.asp','"+e+"','"+i+"','"+t+"');";$(".link-chat").each(function(){$(this).attr("onclick",o)}),$("#idEmpreendimento, #idEmpreendimento2").attr("value",t),$("#idCidade, #idCidade2").attr("value",e)}function link_mapa(e){var i="https://www.mrv.com.br/mapa/"+e;$(".localizacao .mapa").attr("href",i)}function PopChatDT(e,i,t,o){window.open("http://www.mrv.com.br/corretores/chat/"+e+"?cidade="+i+"&bairro="+t+"&cod="+(new Date).getTime()+"&origem="+o,"Pop_Chat","top=25,left=50,width=505,height=590,scrollbars=no,resizable=yes").focus()}function allFancybox(){$(".iframe").fancybox({maxWidth:960,maxHeight:800,fitToView:!1,width:"90%",height:"70%",autoSize:!1,closeClick:!1,openEffect:"none",closeEffect:"none",title:!1})}function fechaFancy(){$(".teste-link").hide()}function abrir(e){$(document).ready(function(){$("#mensagem").html(e),$(".mensagem").fancybox().trigger("click")})}function ie(){var e=window.navigator.userAgent,i=e.indexOf("MSIE ");return 0<i&&parseInt(e.substring(i+5,e.indexOf(".",i)),10)}function alturaSection(){var s="innerHeight"in window?window.innerHeight:document.documentElement.offsetHeight;$("section").each(function(){var e=parseInt($(this).css("padding-top"))+parseInt($(this).css("padding-bottom")),i=$(this).find(".grid-container").outerHeight(),t=s-e;if(s<i+e&&(t=i),isDesktop()){$(this).css("min-height",t);var o=$(this).height();$(this).children(".fullheight").height(o)}})}function menu(){"innerHeight"in window?window.innerHeight:document.documentElement.offsetHeight;$(".link-menu").click(function(){$(this).hasClass("aberto")?($(this).removeClass("aberto"),$(".menu").slideUp()):($(this).addClass("aberto"),$(".menu").slideDown())});var o,s=$("header").find(".menu li a").not(".not"),n=s.map(function(){var e=$(this).attr("href");if($(e).length)return $(e)}),r=!1;s.click(function(e){$(window).width()<1024&&$(".link-menu").hasClass("open")&&$(".link-menu").trigger("click");var i=$(this).attr("href"),t="#"===i?0:$(i).offset().top;isDesktop()||(t="#"===i?0:$(i).offset().top-40,$(".link-menu").removeClass("aberto"),$(".menu").slideUp()),r=!0,$("html, body").stop().animate({scrollTop:t},{duration:300,complete:function(){s.removeClass("ativo").end(),s.filter("[href="+i+"]").addClass("ativo"),setTimeout(function(){r=!1},10)}})}),$(window).scroll(function(){if(!r){var e=$(this).scrollTop(),i=n.map(function(){if($(this).offset().top-1<e)return this}),t=(i=i[i.length-1])&&i.length?i[0].id:"";o!==t&&(o=t,s.removeClass("ativo").end(),s.filter("[href=#"+t+"]").addClass("ativo"))}})}function checkboxs(){$(".input-checkbox").click(function(){$(this).hasClass("marcado")?($(this).next().prop("checked",!1),$(this).removeClass("marcado")):($(this).next().prop("checked",!0),$(this).addClass("marcado"))})}function formularioRodape(){$(".share").click(function(){return window.open(this.href,"","menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600"),!1}),$("#btnIndicacao2").click(function(e){var i=$("#form_indique");validaIndique(i)}),$("#btnAgende2").click(function(e){var i=$("#form_agende"),t=(new Formulario(i),""),o=0,s=$("#strNome").val(),n=$("#strEmail").val(),r=$("#strFone2").val(),l=$("#strFoneCel2").val();if($("input[name=rbContato]").each(function(){$(this).attr("checked")&&(radio=!0)}),""!=s&&"Nome"!=s||(t+="<i class='icon-erro'></i>Digite seu nome.<br /><br />",o=1),""==n||"E-mail"==n?(t+="<i class='icon-erro'></i>Digite seu e-mail.<br /><br />",o=1):/^([\w-]+(?:\.[\w-]+)*)@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$/i.exec(n)||(t+="<i class='icon-erro'></i>E-mail inv&aacute;lido.<br /><br />",o=1),""!=r&&"(00) 00000000"!=r&&"Telefone fixo"!=r||""!=l&&"(00) 00000000"!=l&&"Telefone celular"!=l||(t+="<i class='icon-erro'></i>Digite um telefone ou um celular.<br /><br />",o=1),""!=r&&"(00) 0000-0000"!=r||"Telefone fixo"==r){var a=r.substr(0,2),d=r.substr(3);$("#strDdd").val(a),$("#strFone").val(d)}if(""!=l||"(00) 0000-0000"!=l||"Telefone celular"==l){var c=l.substr(0,2),p=l.substr(3);$("#strDddCel").val(c),$("#strFoneCel").val(p)}return 1==o?abrir("<h3>Erro(s) no preenchimento do formul√°rio</h3><br /><p>"+t+"</p>"):(PostaForm("<p>Dados cadastrados com sucesso. Em breve entraremos em contato!</p><i class='icon-ok'></i>","agende"),s=$("#strNome").val("Nome"),n=$("#strEmail").val("E-mail"),r=$("#strFone2").val("Telefone fixo"),l=$("#strFoneCel2").val("Telefone celular"),$("#strObs").val("Mensagem"),$("#contato-por .opcao").each(function(){$(this).find(".input-checkbox").trigger("click")})),!1}),$(".esconde").click(function(){var e="#"+$(this).attr("data-id");$("#agende, #indique").not(e).fadeOut(),$(e).fadeToggle(),$("html, body").stop().animate({scrollTop:$(e).offset().top-100})}),$(".fechar-agende, .fechar-indique").click(function(){$($(this).attr("data-id")).fadeOut()})}function photoswipe(e){!function(e){for(var i=function(e){(e=e||window.event).preventDefault?e.preventDefault():e.returnValue=!1;var i=function e(i,t){return i&&(t(i)?i:e(i.parentNode,t))}(e.target||e.srcElement,function(e){return e.getAttribute("data-el")&&"FIGURE"===e.getAttribute("data-el").toUpperCase()});if(i){for(var t,o=$(i).parents(".galeria"),s=$(o[0]).find('[data-el="figure"]'),n=s.length,r=0,l=0;l<n;l++)if(1===s[l].nodeType){if(s[l]===i){t=r;break}r++}return 0<=t&&a(t,o),!1}},a=function(e,i,t,o){var s,n,r,l=document.querySelectorAll(".pswp")[0];if(r=function(e){for(var i,t,o,s=$(e).find('[data-el="figure"]'),n=s.length,r=[],l=0;l<n;l++)1===(i=s[l]).nodeType&&(t=i.children[0],o=8==ie()?{src:t.getAttribute("href"),w:1600,h:1130}:{src:t.getAttribute("href"),w:0,h:0},i.children[0].children[0].getAttribute("title")?o.title=i.children[0].children[0].getAttribute("title"):o.title=i.children[0].getAttribute("title"),o.title+="",0<t.children.length&&(o.msrc=t.children[0].getAttribute("src")),o.el=i,r.push(o));return r}(i),n={galleryUID:$(i).attr("data-pswp-uid"),showHideOpacity:!0,loadingIndicatorDelay:500,tapToToggleControls:!1,preloaderEl:!0,getThumbBoundsFn:function(e){var i=r[e].el.getElementsByTagName("img")[0],t=window.pageYOffset||document.documentElement.scrollTop,o=i.getBoundingClientRect();return{x:o.left,y:o.top+t,w:o.width}}},o)if(n.galleryPIDs){for(var a=0;a<r.length;a++)if(r[a].pid==e){n.index=a;break}}else n.index=parseInt(e,10)-1;else n.index=parseInt(e,10);isNaN(n.index)||(t&&(n.showAnimationDuration=0),(s=new PhotoSwipe(l,PhotoSwipeUI_Default,r,n)).listen("gettingData",function(e,i){if(i.w<1||i.h<1){var t=new Image;t.onload=function(){i.w=this.width,i.h=this.height,s.invalidateCurrItems(),s.updateSize(!0)},t.src=i.src}}),s.init())},t=document.querySelectorAll(e),o=0,s=t.length;o<s;o++)t[o].setAttribute("data-pswp-uid",o+1),t[o].onclick=i;var n=function(){var e=window.location.hash.substring(1),i={};if(e.length<5)return i;for(var t=e.split("&"),o=0;o<t.length;o++)if(t[o]){var s=t[o].split("=");s.length<2||(i[s[0]]=s[1])}return i.gid&&(i.gid=parseInt(i.gid,10)),i}();n.pid&&n.gid&&a(n.pid,t[n.gid-1],!0,!0)}(e)}function ie(){var e=window.navigator.userAgent,i=e.indexOf("MSIE ");return 0<i&&parseInt(e.substring(i+5,e.indexOf(".",i)),10)}function IsEmail(e){return-1===e.search(/[^@\-\.\w]|^[_@\.\-]|[\._\-]{2}|[@\.]{2}|(@)[^@]*\1/)&&-1!==e.search(/@[\w\-]+\./)&&-1!==e.search(/\.[a-zA-Z]{2,3}$/)}$(document).on("click",".btn-saibamais",function(){$(this).parent().next().toggle()}),$(".pswp__scroll-wrap button").on("click",function(e){e.preventDefault()}),$(window).on("load",function(){alturaSection()}),$(window).resize(function(){alturaSection(),isDesktop()&&(texto_lazer(),thumbs_lazer(),thumb_mapa(),thumb_implantacao())}),$(document).ready(function(){link_chat(129,1542,3820),link_mapa(3820),menu(),isMobile()&&alturaSection(),photoswipe(".galeria"),allFancybox(),formularioRodape(),checkboxs(),isDesktop()&&(texto_lazer(),thumbs_lazer(),thumb_mapa(),thumb_implantacao()),$(".galeriadefotos").slick({slidesToShow:1,slidesToScroll:1,arrows:!0,infinite:!0,lazyLoad:"ondemand",nextArrow:"<span class='setas slick-next'><i class='icon-right-open-big'></i></span>",prevArrow:"<span class='setas slick-prev'><i class='icon-left-open-big'></i></span>"}),isMobile()&&$(".mobileslide").slick({slidesToShow:1,slidesToScroll:1,arrows:!0,infinite:!1,lazyLoad:"ondemand",nextArrow:"<span class='setas slick-next'><i class='icon-right-open-big'></i></span>",prevArrow:"<span class='setas slick-prev'><i class='icon-left-open-big'></i></span>"}),$(".center-height").each(function(e,i){$heightParent=$(this).parent().innerHeight()/2,$heightObject=$(this).innerHeight()/2,$valHeight=$heightParent-$heightObject,$(this).css({position:"relative",top:$valHeight})}),$(".icons-desc li").click(function(){var e=$(this).find(".box-info"),i=$(this).find(".info-cont");e.toggleClass("ativo"),$heightParent=e.innerHeight()/2,$heightObject=i.innerHeight()/2,$valHeight=$heightParent-$heightObject+27,i.css({top:$valHeight})}),isMobile()&&($(".mobile-bts").click(function(){$(this).toggleClass("close-menu"),$(".header").toggleClass("ativo")}),$(".nav-menu li a").click(function(){$(".mobile-bts").toggleClass("close-menu"),$(".header").toggleClass("ativo")}),$(".bt-header").click(function(){$(".mobile-bts").removeClass("close-menu"),$(".header").removeClass("ativo")})),$(".scroll").click(function(e){e.preventDefault(),$("html,body,[canvas=container]").animate({scrollTop:$(this.hash).offset().top},800)}),setTimeout(function(){$(".header nav ul li a.scroll").each(function(e,i){var t=$(this.hash),o=$(this),s=(t.offset().top,t.offset().top),n=t.offset().top+t.innerHeight();console.log(s),console.log(n),$(window).scroll(function(){$(this).scrollTop()>=s&&$(this).scrollTop()<n?o.addClass("ativo"):o.removeClass("ativo")})})},1e3),$(".btn-cad").click(function(){var t=0;if($(".form").find(".obrigatorio").each(function(){var e=$(this),i=e.val();(""===i||"(__) ________"===i||e.hasClass("email")&&!IsEmail(i))&&t++,0<t?e.addClass("erro"):e.removeClass("erro")}),0<t)$(".msg").addClass("erro").text("Preencha todos os campos corretamente.");else{var e=$("#txtcelular").val().replace("(","").replace(")","").replace(" ",""),i={Nome:$("#nome").val(),Email:$("#email").val(),Celular:e},o={async:!0,crossDomain:!0,url:"proxy.aspx/GravaContato",method:"POST",headers:{"Content-Type":"application/json",Accept:"*/*","cache-control":"no-cache"},processData:!1,data:JSON.stringify(i)};$.ajax(o).done(function(e){e.d?$(".msg").addClass("ok").text("Cadastro realizado com sucesso."):$(".msg").addClass("erro").text("O e-mail informado j√° est√° cadastrado em nosso banco de dados.")}),$("#txtcelular").val(""),$("#email").val(""),$("#nome").val("")}return!1})}),function(e){"use strict";"function"==typeof define&&define.amd?define(["jquery"],e):"undefined"!=typeof exports?module.exports=e(require("jquery")):e(jQuery)}(function(d){"use strict";var s,r=window.Slick||{};s=0,(r=function(e,i){var t,o=this;o.defaults={accessibility:!0,adaptiveHeight:!1,appendArrows:d(e),appendDots:d(e),arrows:!0,asNavFor:null,prevArrow:'<button class="slick-prev" aria-label="Previous" type="button">Previous</button>',nextArrow:'<button class="slick-next" aria-label="Next" type="button">Next</button>',autoplay:!1,autoplaySpeed:3e3,centerMode:!1,centerPadding:"50px",cssEase:"ease",customPaging:function(e,i){return d('<button type="button" />').text(i+1)},dots:!1,dotsClass:"slick-dots",draggable:!0,easing:"linear",edgeFriction:.35,fade:!1,focusOnSelect:!1,infinite:!0,initialSlide:0,lazyLoad:"ondemand",mobileFirst:!1,pauseOnHover:!0,pauseOnFocus:!0,pauseOnDotsHover:!1,respondTo:"window",responsive:null,rows:1,rtl:!1,slide:"",slidesPerRow:1,slidesToShow:1,slidesToScroll:1,speed:500,swipe:!0,swipeToSlide:!1,touchMove:!0,touchThreshold:5,useCSS:!0,useTransform:!0,variableWidth:!1,vertical:!1,verticalSwiping:!1,waitForAnimate:!0,zIndex:1e3},o.initials={animating:!1,dragging:!1,autoPlayTimer:null,currentDirection:0,currentLeft:null,currentSlide:0,direction:1,$dots:null,listWidth:null,listHeight:null,loadIndex:0,$nextArrow:null,$prevArrow:null,scrolling:!1,slideCount:null,slideWidth:null,$slideTrack:null,$slides:null,sliding:!1,slideOffset:0,swipeLeft:null,swiping:!1,$list:null,touchObject:{},transformsEnabled:!1,unslicked:!1},d.extend(o,o.initials),o.activeBreakpoint=null,o.animType=null,o.animProp=null,o.breakpoints=[],o.breakpointSettings=[],o.cssTransitions=!1,o.focussed=!1,o.interrupted=!1,o.hidden="hidden",o.paused=!0,o.positionProp=null,o.respondTo=null,o.rowCount=1,o.shouldClick=!0,o.$slider=d(e),o.$slidesCache=null,o.transformType=null,o.transitionType=null,o.visibilityChange="visibilitychange",o.windowWidth=0,o.windowTimer=null,t=d(e).data("slick")||{},o.options=d.extend({},o.defaults,i,t),o.currentSlide=o.options.initialSlide,o.originalSettings=o.options,void 0!==document.mozHidden?(o.hidden="mozHidden",o.visibilityChange="mozvisibilitychange"):void 0!==document.webkitHidden&&(o.hidden="webkitHidden",o.visibilityChange="webkitvisibilitychange"),o.autoPlay=d.proxy(o.autoPlay,o),o.autoPlayClear=d.proxy(o.autoPlayClear,o),o.autoPlayIterator=d.proxy(o.autoPlayIterator,o),o.changeSlide=d.proxy(o.changeSlide,o),o.clickHandler=d.proxy(o.clickHandler,o),o.selectHandler=d.proxy(o.selectHandler,o),o.setPosition=d.proxy(o.setPosition,o),o.swipeHandler=d.proxy(o.swipeHandler,o),o.dragHandler=d.proxy(o.dragHandler,o),o.keyHandler=d.proxy(o.keyHandler,o),o.instanceUid=s++,o.htmlExpr=/^(?:\s*(<[\w\W]+>)[^>]*)$/,o.registerBreakpoints(),o.init(!0)}).prototype.activateADA=function(){this.$slideTrack.find(".slick-active").attr({"aria-hidden":"false"}).find("a, input, button, select").attr({tabindex:"0"})},r.prototype.addSlide=r.prototype.slickAdd=function(e,i,t){var o=this;if("boolean"==typeof i)t=i,i=null;else if(i<0||i>=o.slideCount)return!1;o.unload(),"number"==typeof i?0===i&&0===o.$slides.length?d(e).appendTo(o.$slideTrack):t?d(e).insertBefore(o.$slides.eq(i)):d(e).insertAfter(o.$slides.eq(i)):!0===t?d(e).prependTo(o.$slideTrack):d(e).appendTo(o.$slideTrack),o.$slides=o.$slideTrack.children(this.options.slide),o.$slideTrack.children(this.options.slide).detach(),o.$slideTrack.append(o.$slides),o.$slides.each(function(e,i){d(i).attr("data-slick-index",e)}),o.$slidesCache=o.$slides,o.reinit()},r.prototype.animateHeight=function(){var e=this;if(1===e.options.slidesToShow&&!0===e.options.adaptiveHeight&&!1===e.options.vertical){var i=e.$slides.eq(e.currentSlide).outerHeight(!0);e.$list.animate({height:i},e.options.speed)}},r.prototype.animateSlide=function(e,i){var t={},o=this;o.animateHeight(),!0===o.options.rtl&&!1===o.options.vertical&&(e=-e),!1===o.transformsEnabled?!1===o.options.vertical?o.$slideTrack.animate({left:e},o.options.speed,o.options.easing,i):o.$slideTrack.animate({top:e},o.options.speed,o.options.easing,i):!1===o.cssTransitions?(!0===o.options.rtl&&(o.currentLeft=-o.currentLeft),d({animStart:o.currentLeft}).animate({animStart:e},{duration:o.options.speed,easing:o.options.easing,step:function(e){e=Math.ceil(e),!1===o.options.vertical?t[o.animType]="translate("+e+"px, 0px)":t[o.animType]="translate(0px,"+e+"px)",o.$slideTrack.css(t)},complete:function(){i&&i.call()}})):(o.applyTransition(),e=Math.ceil(e),!1===o.options.vertical?t[o.animType]="translate3d("+e+"px, 0px, 0px)":t[o.animType]="translate3d(0px,"+e+"px, 0px)",o.$slideTrack.css(t),i&&setTimeout(function(){o.disableTransition(),i.call()},o.options.speed))},r.prototype.getNavTarget=function(){var e=this.options.asNavFor;return e&&null!==e&&(e=d(e).not(this.$slider)),e},r.prototype.asNavFor=function(i){var e=this.getNavTarget();null!==e&&"object"==typeof e&&e.each(function(){var e=d(this).slick("getSlick");e.unslicked||e.slideHandler(i,!0)})},r.prototype.applyTransition=function(e){var i=this,t={};!1===i.options.fade?t[i.transitionType]=i.transformType+" "+i.options.speed+"ms "+i.options.cssEase:t[i.transitionType]="opacity "+i.options.speed+"ms "+i.options.cssEase,!1===i.options.fade?i.$slideTrack.css(t):i.$slides.eq(e).css(t)},r.prototype.autoPlay=function(){var e=this;e.autoPlayClear(),e.slideCount>e.options.slidesToShow&&(e.autoPlayTimer=setInterval(e.autoPlayIterator,e.options.autoplaySpeed))},r.prototype.autoPlayClear=function(){this.autoPlayTimer&&clearInterval(this.autoPlayTimer)},r.prototype.autoPlayIterator=function(){var e=this,i=e.currentSlide+e.options.slidesToScroll;e.paused||e.interrupted||e.focussed||(!1===e.options.infinite&&(1===e.direction&&e.currentSlide+1===e.slideCount-1?e.direction=0:0===e.direction&&(i=e.currentSlide-e.options.slidesToScroll,e.currentSlide-1==0&&(e.direction=1))),e.slideHandler(i))},r.prototype.buildArrows=function(){var e=this;!0===e.options.arrows&&(e.$prevArrow=d(e.options.prevArrow).addClass("slick-arrow"),e.$nextArrow=d(e.options.nextArrow).addClass("slick-arrow"),e.slideCount>e.options.slidesToShow?(e.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"),e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.prependTo(e.options.appendArrows),e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.appendTo(e.options.appendArrows),!0!==e.options.infinite&&e.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true")):e.$prevArrow.add(e.$nextArrow).addClass("slick-hidden").attr({"aria-disabled":"true",tabindex:"-1"}))},r.prototype.buildDots=function(){var e,i,t=this;if(!0===t.options.dots){for(t.$slider.addClass("slick-dotted"),i=d("<ul />").addClass(t.options.dotsClass),e=0;e<=t.getDotCount();e+=1)i.append(d("<li />").append(t.options.customPaging.call(this,t,e)));t.$dots=i.appendTo(t.options.appendDots),t.$dots.find("li").first().addClass("slick-active")}},r.prototype.buildOut=function(){var e=this;e.$slides=e.$slider.children(e.options.slide+":not(.slick-cloned)").addClass("slick-slide"),e.slideCount=e.$slides.length,e.$slides.each(function(e,i){d(i).attr("data-slick-index",e).data("originalStyling",d(i).attr("style")||"")}),e.$slider.addClass("slick-slider"),e.$slideTrack=0===e.slideCount?d('<div class="slick-track"/>').appendTo(e.$slider):e.$slides.wrapAll('<div class="slick-track"/>').parent(),e.$list=e.$slideTrack.wrap('<div class="slick-list"/>').parent(),e.$slideTrack.css("opacity",0),!0!==e.options.centerMode&&!0!==e.options.swipeToSlide||(e.options.slidesToScroll=1),d("img[data-lazy]",e.$slider).not("[src]").addClass("slick-loading"),e.setupInfinite(),e.buildArrows(),e.buildDots(),e.updateDots(),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),!0===e.options.draggable&&e.$list.addClass("draggable")},r.prototype.buildRows=function(){var e,i,t,o,s,n,r,l=this;if(o=document.createDocumentFragment(),n=l.$slider.children(),1<l.options.rows){for(r=l.options.slidesPerRow*l.options.rows,s=Math.ceil(n.length/r),e=0;e<s;e++){var a=document.createElement("div");for(i=0;i<l.options.rows;i++){var d=document.createElement("div");for(t=0;t<l.options.slidesPerRow;t++){var c=e*r+(i*l.options.slidesPerRow+t);n.get(c)&&d.appendChild(n.get(c))}a.appendChild(d)}o.appendChild(a)}l.$slider.empty().append(o),l.$slider.children().children().children().css({width:100/l.options.slidesPerRow+"%",display:"inline-block"})}},r.prototype.checkResponsive=function(e,i){var t,o,s,n=this,r=!1,l=n.$slider.width(),a=window.innerWidth||d(window).width();if("window"===n.respondTo?s=a:"slider"===n.respondTo?s=l:"min"===n.respondTo&&(s=Math.min(a,l)),n.options.responsive&&n.options.responsive.length&&null!==n.options.responsive){for(t in o=null,n.breakpoints)n.breakpoints.hasOwnProperty(t)&&(!1===n.originalSettings.mobileFirst?s<n.breakpoints[t]&&(o=n.breakpoints[t]):s>n.breakpoints[t]&&(o=n.breakpoints[t]));null!==o?null!==n.activeBreakpoint?(o!==n.activeBreakpoint||i)&&(n.activeBreakpoint=o,"unslick"===n.breakpointSettings[o]?n.unslick(o):(n.options=d.extend({},n.originalSettings,n.breakpointSettings[o]),!0===e&&(n.currentSlide=n.options.initialSlide),n.refresh(e)),r=o):(n.activeBreakpoint=o,"unslick"===n.breakpointSettings[o]?n.unslick(o):(n.options=d.extend({},n.originalSettings,n.breakpointSettings[o]),!0===e&&(n.currentSlide=n.options.initialSlide),n.refresh(e)),r=o):null!==n.activeBreakpoint&&(n.activeBreakpoint=null,n.options=n.originalSettings,!0===e&&(n.currentSlide=n.options.initialSlide),n.refresh(e),r=o),e||!1===r||n.$slider.trigger("breakpoint",[n,r])}},r.prototype.changeSlide=function(e,i){var t,o,s=this,n=d(e.currentTarget);switch(n.is("a")&&e.preventDefault(),n.is("li")||(n=n.closest("li")),t=s.slideCount%s.options.slidesToScroll!=0?0:(s.slideCount-s.currentSlide)%s.options.slidesToScroll,e.data.message){case"previous":o=0===t?s.options.slidesToScroll:s.options.slidesToShow-t,s.slideCount>s.options.slidesToShow&&s.slideHandler(s.currentSlide-o,!1,i);break;case"next":o=0===t?s.options.slidesToScroll:t,s.slideCount>s.options.slidesToShow&&s.slideHandler(s.currentSlide+o,!1,i);break;case"index":var r=0===e.data.index?0:e.data.index||n.index()*s.options.slidesToScroll;s.slideHandler(s.checkNavigable(r),!1,i),n.children().trigger("focus");break;default:return}},r.prototype.checkNavigable=function(e){var i,t;if(t=0,e>(i=this.getNavigableIndexes())[i.length-1])e=i[i.length-1];else for(var o in i){if(e<i[o]){e=t;break}t=i[o]}return e},r.prototype.cleanUpEvents=function(){var e=this;e.options.dots&&null!==e.$dots&&(d("li",e.$dots).off("click.slick",e.changeSlide).off("mouseenter.slick",d.proxy(e.interrupt,e,!0)).off("mouseleave.slick",d.proxy(e.interrupt,e,!1)),!0===e.options.accessibility&&e.$dots.off("keydown.slick",e.keyHandler)),e.$slider.off("focus.slick blur.slick"),!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow&&e.$prevArrow.off("click.slick",e.changeSlide),e.$nextArrow&&e.$nextArrow.off("click.slick",e.changeSlide),!0===e.options.accessibility&&(e.$prevArrow.off("keydown.slick",e.keyHandler),e.$nextArrow.off("keydown.slick",e.keyHandler))),e.$list.off("touchstart.slick mousedown.slick",e.swipeHandler),e.$list.off("touchmove.slick mousemove.slick",e.swipeHandler),e.$list.off("touchend.slick mouseup.slick",e.swipeHandler),e.$list.off("touchcancel.slick mouseleave.slick",e.swipeHandler),e.$list.off("click.slick",e.clickHandler),d(document).off(e.visibilityChange,e.visibility),e.cleanUpSlideEvents(),!0===e.options.accessibility&&e.$list.off("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&d(e.$slideTrack).children().off("click.slick",e.selectHandler),d(window).off("orientationchange.slick.slick-"+e.instanceUid,e.orientationChange),d(window).off("resize.slick.slick-"+e.instanceUid,e.resize),d("[draggable!=true]",e.$slideTrack).off("dragstart",e.preventDefault),d(window).off("load.slick.slick-"+e.instanceUid,e.setPosition)},r.prototype.cleanUpSlideEvents=function(){var e=this;e.$list.off("mouseenter.slick",d.proxy(e.interrupt,e,!0)),e.$list.off("mouseleave.slick",d.proxy(e.interrupt,e,!1))},r.prototype.cleanUpRows=function(){var e;1<this.options.rows&&((e=this.$slides.children().children()).removeAttr("style"),this.$slider.empty().append(e))},r.prototype.clickHandler=function(e){!1===this.shouldClick&&(e.stopImmediatePropagation(),e.stopPropagation(),e.preventDefault())},r.prototype.destroy=function(e){var i=this;i.autoPlayClear(),i.touchObject={},i.cleanUpEvents(),d(".slick-cloned",i.$slider).detach(),i.$dots&&i.$dots.remove(),i.$prevArrow&&i.$prevArrow.length&&(i.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),i.htmlExpr.test(i.options.prevArrow)&&i.$prevArrow.remove()),i.$nextArrow&&i.$nextArrow.length&&(i.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display",""),i.htmlExpr.test(i.options.nextArrow)&&i.$nextArrow.remove()),i.$slides&&(i.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function(){d(this).attr("style",d(this).data("originalStyling"))}),i.$slideTrack.children(this.options.slide).detach(),i.$slideTrack.detach(),i.$list.detach(),i.$slider.append(i.$slides)),i.cleanUpRows(),i.$slider.removeClass("slick-slider"),i.$slider.removeClass("slick-initialized"),i.$slider.removeClass("slick-dotted"),i.unslicked=!0,e||i.$slider.trigger("destroy",[i])},r.prototype.disableTransition=function(e){var i={};i[this.transitionType]="",!1===this.options.fade?this.$slideTrack.css(i):this.$slides.eq(e).css(i)},r.prototype.fadeSlide=function(e,i){var t=this;!1===t.cssTransitions?(t.$slides.eq(e).css({zIndex:t.options.zIndex}),t.$slides.eq(e).animate({opacity:1},t.options.speed,t.options.easing,i)):(t.applyTransition(e),t.$slides.eq(e).css({opacity:1,zIndex:t.options.zIndex}),i&&setTimeout(function(){t.disableTransition(e),i.call()},t.options.speed))},r.prototype.fadeSlideOut=function(e){var i=this;!1===i.cssTransitions?i.$slides.eq(e).animate({opacity:0,zIndex:i.options.zIndex-2},i.options.speed,i.options.easing):(i.applyTransition(e),i.$slides.eq(e).css({opacity:0,zIndex:i.options.zIndex-2}))},r.prototype.filterSlides=r.prototype.slickFilter=function(e){var i=this;null!==e&&(i.$slidesCache=i.$slides,i.unload(),i.$slideTrack.children(this.options.slide).detach(),i.$slidesCache.filter(e).appendTo(i.$slideTrack),i.reinit())},r.prototype.focusHandler=function(){var t=this;t.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick","*",function(e){e.stopImmediatePropagation();var i=d(this);setTimeout(function(){t.options.pauseOnFocus&&(t.focussed=i.is(":focus"),t.autoPlay())},0)})},r.prototype.getCurrent=r.prototype.slickCurrentSlide=function(){return this.currentSlide},r.prototype.getDotCount=function(){var e=this,i=0,t=0,o=0;if(!0===e.options.infinite)if(e.slideCount<=e.options.slidesToShow)++o;else for(;i<e.slideCount;)++o,i=t+e.options.slidesToScroll,t+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;else if(!0===e.options.centerMode)o=e.slideCount;else if(e.options.asNavFor)for(;i<e.slideCount;)++o,i=t+e.options.slidesToScroll,t+=e.options.slidesToScroll<=e.options.slidesToShow?e.options.slidesToScroll:e.options.slidesToShow;else o=1+Math.ceil((e.slideCount-e.options.slidesToShow)/e.options.slidesToScroll);return o-1},r.prototype.getLeft=function(e){var i,t,o,s=this,n=0;return s.slideOffset=0,t=s.$slides.first().outerHeight(!0),!0===s.options.infinite?(s.slideCount>s.options.slidesToShow&&(s.slideOffset=s.slideWidth*s.options.slidesToShow*-1,n=t*s.options.slidesToShow*-1),s.slideCount%s.options.slidesToScroll!=0&&e+s.options.slidesToScroll>s.slideCount&&s.slideCount>s.options.slidesToShow&&(e>s.slideCount?(s.slideOffset=(s.options.slidesToShow-(e-s.slideCount))*s.slideWidth*-1,n=(s.options.slidesToShow-(e-s.slideCount))*t*-1):(s.slideOffset=s.slideCount%s.options.slidesToScroll*s.slideWidth*-1,n=s.slideCount%s.options.slidesToScroll*t*-1))):e+s.options.slidesToShow>s.slideCount&&(s.slideOffset=(e+s.options.slidesToShow-s.slideCount)*s.slideWidth,n=(e+s.options.slidesToShow-s.slideCount)*t),s.slideCount<=s.options.slidesToShow&&(n=s.slideOffset=0),!0===s.options.centerMode&&s.slideCount<=s.options.slidesToShow?s.slideOffset=s.slideWidth*Math.floor(s.options.slidesToShow)/2-s.slideWidth*s.slideCount/2:!0===s.options.centerMode&&!0===s.options.infinite?s.slideOffset+=s.slideWidth*Math.floor(s.options.slidesToShow/2)-s.slideWidth:!0===s.options.centerMode&&(s.slideOffset=0,s.slideOffset+=s.slideWidth*Math.floor(s.options.slidesToShow/2)),i=!1===s.options.vertical?e*s.slideWidth*-1+s.slideOffset:e*t*-1+n,!0===s.options.variableWidth&&(o=s.slideCount<=s.options.slidesToShow||!1===s.options.infinite?s.$slideTrack.children(".slick-slide").eq(e):s.$slideTrack.children(".slick-slide").eq(e+s.options.slidesToShow),i=!0===s.options.rtl?o[0]?-1*(s.$slideTrack.width()-o[0].offsetLeft-o.width()):0:o[0]?-1*o[0].offsetLeft:0,!0===s.options.centerMode&&(o=s.slideCount<=s.options.slidesToShow||!1===s.options.infinite?s.$slideTrack.children(".slick-slide").eq(e):s.$slideTrack.children(".slick-slide").eq(e+s.options.slidesToShow+1),i=!0===s.options.rtl?o[0]?-1*(s.$slideTrack.width()-o[0].offsetLeft-o.width()):0:o[0]?-1*o[0].offsetLeft:0,i+=(s.$list.width()-o.outerWidth())/2)),i},r.prototype.getOption=r.prototype.slickGetOption=function(e){return this.options[e]},r.prototype.getNavigableIndexes=function(){var e,i=this,t=0,o=0,s=[];for(!1===i.options.infinite?e=i.slideCount:(t=-1*i.options.slidesToScroll,o=-1*i.options.slidesToScroll,e=2*i.slideCount);t<e;)s.push(t),t=o+i.options.slidesToScroll,o+=i.options.slidesToScroll<=i.options.slidesToShow?i.options.slidesToScroll:i.options.slidesToShow;return s},r.prototype.getSlick=function(){return this},r.prototype.getSlideCount=function(){var t,o,s=this;return o=!0===s.options.centerMode?s.slideWidth*Math.floor(s.options.slidesToShow/2):0,!0===s.options.swipeToSlide?(s.$slideTrack.find(".slick-slide").each(function(e,i){if(i.offsetLeft-o+d(i).outerWidth()/2>-1*s.swipeLeft)return t=i,!1}),Math.abs(d(t).attr("data-slick-index")-s.currentSlide)||1):s.options.slidesToScroll},r.prototype.goTo=r.prototype.slickGoTo=function(e,i){this.changeSlide({data:{message:"index",index:parseInt(e)}},i)},r.prototype.init=function(e){var i=this;d(i.$slider).hasClass("slick-initialized")||(d(i.$slider).addClass("slick-initialized"),i.buildRows(),i.buildOut(),i.setProps(),i.startLoad(),i.loadSlider(),i.initializeEvents(),i.updateArrows(),i.updateDots(),i.checkResponsive(!0),i.focusHandler()),e&&i.$slider.trigger("init",[i]),!0===i.options.accessibility&&i.initADA(),i.options.autoplay&&(i.paused=!1,i.autoPlay())},r.prototype.initADA=function(){var t=this,o=Math.ceil(t.slideCount/t.options.slidesToShow),s=t.getNavigableIndexes().filter(function(e){return 0<=e&&e<t.slideCount});t.$slides.add(t.$slideTrack.find(".slick-cloned")).attr({"aria-hidden":"true",tabindex:"-1"}).find("a, input, button, select").attr({tabindex:"-1"}),null!==t.$dots&&(t.$slides.not(t.$slideTrack.find(".slick-cloned")).each(function(e){var i=s.indexOf(e);d(this).attr({role:"tabpanel",id:"slick-slide"+t.instanceUid+e,tabindex:-1}),-1!==i&&d(this).attr({"aria-describedby":"slick-slide-control"+t.instanceUid+i})}),t.$dots.attr("role","tablist").find("li").each(function(e){var i=s[e];d(this).attr({role:"presentation"}),d(this).find("button").first().attr({role:"tab",id:"slick-slide-control"+t.instanceUid+e,"aria-controls":"slick-slide"+t.instanceUid+i,"aria-label":e+1+" of "+o,"aria-selected":null,tabindex:"-1"})}).eq(t.currentSlide).find("button").attr({"aria-selected":"true",tabindex:"0"}).end());for(var e=t.currentSlide,i=e+t.options.slidesToShow;e<i;e++)t.$slides.eq(e).attr("tabindex",0);t.activateADA()},r.prototype.initArrowEvents=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.off("click.slick").on("click.slick",{message:"previous"},e.changeSlide),e.$nextArrow.off("click.slick").on("click.slick",{message:"next"},e.changeSlide),!0===e.options.accessibility&&(e.$prevArrow.on("keydown.slick",e.keyHandler),e.$nextArrow.on("keydown.slick",e.keyHandler)))},r.prototype.initDotEvents=function(){var e=this;!0===e.options.dots&&(d("li",e.$dots).on("click.slick",{message:"index"},e.changeSlide),!0===e.options.accessibility&&e.$dots.on("keydown.slick",e.keyHandler)),!0===e.options.dots&&!0===e.options.pauseOnDotsHover&&d("li",e.$dots).on("mouseenter.slick",d.proxy(e.interrupt,e,!0)).on("mouseleave.slick",d.proxy(e.interrupt,e,!1))},r.prototype.initSlideEvents=function(){var e=this;e.options.pauseOnHover&&(e.$list.on("mouseenter.slick",d.proxy(e.interrupt,e,!0)),e.$list.on("mouseleave.slick",d.proxy(e.interrupt,e,!1)))},r.prototype.initializeEvents=function(){var e=this;e.initArrowEvents(),e.initDotEvents(),e.initSlideEvents(),e.$list.on("touchstart.slick mousedown.slick",{action:"start"},e.swipeHandler),e.$list.on("touchmove.slick mousemove.slick",{action:"move"},e.swipeHandler),e.$list.on("touchend.slick mouseup.slick",{action:"end"},e.swipeHandler),e.$list.on("touchcancel.slick mouseleave.slick",{action:"end"},e.swipeHandler),e.$list.on("click.slick",e.clickHandler),d(document).on(e.visibilityChange,d.proxy(e.visibility,e)),!0===e.options.accessibility&&e.$list.on("keydown.slick",e.keyHandler),!0===e.options.focusOnSelect&&d(e.$slideTrack).children().on("click.slick",e.selectHandler),d(window).on("orientationchange.slick.slick-"+e.instanceUid,d.proxy(e.orientationChange,e)),d(window).on("resize.slick.slick-"+e.instanceUid,d.proxy(e.resize,e)),d("[draggable!=true]",e.$slideTrack).on("dragstart",e.preventDefault),d(window).on("load.slick.slick-"+e.instanceUid,e.setPosition),d(e.setPosition)},r.prototype.initUI=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.show(),e.$nextArrow.show()),!0===e.options.dots&&e.slideCount>e.options.slidesToShow&&e.$dots.show()},r.prototype.keyHandler=function(e){var i=this;e.target.tagName.match("TEXTAREA|INPUT|SELECT")||(37===e.keyCode&&!0===i.options.accessibility?i.changeSlide({data:{message:!0===i.options.rtl?"next":"previous"}}):39===e.keyCode&&!0===i.options.accessibility&&i.changeSlide({data:{message:!0===i.options.rtl?"previous":"next"}}))},r.prototype.lazyLoad=function(){var e,i,t,n=this;function o(e){d("img[data-lazy]",e).each(function(){var e=d(this),i=d(this).attr("data-lazy"),t=d(this).attr("data-srcset"),o=d(this).attr("data-sizes")||n.$slider.attr("data-sizes"),s=document.createElement("img");s.onload=function(){e.animate({opacity:0},100,function(){t&&(e.attr("srcset",t),o&&e.attr("sizes",o)),e.attr("src",i).animate({opacity:1},200,function(){e.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading")}),n.$slider.trigger("lazyLoaded",[n,e,i])})},s.onerror=function(){e.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),n.$slider.trigger("lazyLoadError",[n,e,i])},s.src=i})}if(!0===n.options.centerMode?!0===n.options.infinite?t=(i=n.currentSlide+(n.options.slidesToShow/2+1))+n.options.slidesToShow+2:(i=Math.max(0,n.currentSlide-(n.options.slidesToShow/2+1)),t=n.options.slidesToShow/2+1+2+n.currentSlide):(i=n.options.infinite?n.options.slidesToShow+n.currentSlide:n.currentSlide,t=Math.ceil(i+n.options.slidesToShow),!0===n.options.fade&&(0<i&&i--,t<=n.slideCount&&t++)),e=n.$slider.find(".slick-slide").slice(i,t),"anticipated"===n.options.lazyLoad)for(var s=i-1,r=t,l=n.$slider.find(".slick-slide"),a=0;a<n.options.slidesToScroll;a++)s<0&&(s=n.slideCount-1),e=(e=e.add(l.eq(s))).add(l.eq(r)),s--,r++;o(e),n.slideCount<=n.options.slidesToShow?o(n.$slider.find(".slick-slide")):n.currentSlide>=n.slideCount-n.options.slidesToShow?o(n.$slider.find(".slick-cloned").slice(0,n.options.slidesToShow)):0===n.currentSlide&&o(n.$slider.find(".slick-cloned").slice(-1*n.options.slidesToShow))},r.prototype.loadSlider=function(){var e=this;e.setPosition(),e.$slideTrack.css({opacity:1}),e.$slider.removeClass("slick-loading"),e.initUI(),"progressive"===e.options.lazyLoad&&e.progressiveLazyLoad()},r.prototype.next=r.prototype.slickNext=function(){this.changeSlide({data:{message:"next"}})},r.prototype.orientationChange=function(){this.checkResponsive(),this.setPosition()},r.prototype.pause=r.prototype.slickPause=function(){this.autoPlayClear(),this.paused=!0},r.prototype.play=r.prototype.slickPlay=function(){var e=this;e.autoPlay(),e.options.autoplay=!0,e.paused=!1,e.focussed=!1,e.interrupted=!1},r.prototype.postSlide=function(e){var i=this;i.unslicked||(i.$slider.trigger("afterChange",[i,e]),i.animating=!1,i.slideCount>i.options.slidesToShow&&i.setPosition(),i.swipeLeft=null,i.options.autoplay&&i.autoPlay(),!0===i.options.accessibility&&(i.initADA(),i.options.autoplay||d(i.$slides.get(i.currentSlide)).attr("tabindex",0).focus()))},r.prototype.prev=r.prototype.slickPrev=function(){this.changeSlide({data:{message:"previous"}})},r.prototype.preventDefault=function(e){e.preventDefault()},r.prototype.progressiveLazyLoad=function(e){e=e||1;var i,t,o,s,n,r=this,l=d("img[data-lazy]",r.$slider);l.length?(i=l.first(),t=i.attr("data-lazy"),o=i.attr("data-srcset"),s=i.attr("data-sizes")||r.$slider.attr("data-sizes"),(n=document.createElement("img")).onload=function(){o&&(i.attr("srcset",o),s&&i.attr("sizes",s)),i.attr("src",t).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"),!0===r.options.adaptiveHeight&&r.setPosition(),r.$slider.trigger("lazyLoaded",[r,i,t]),r.progressiveLazyLoad()},n.onerror=function(){e<3?setTimeout(function(){r.progressiveLazyLoad(e+1)},500):(i.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"),r.$slider.trigger("lazyLoadError",[r,i,t]),r.progressiveLazyLoad())},n.src=t):r.$slider.trigger("allImagesLoaded",[r])},r.prototype.refresh=function(e){var i,t,o=this;t=o.slideCount-o.options.slidesToShow,!o.options.infinite&&o.currentSlide>t&&(o.currentSlide=t),o.slideCount<=o.options.slidesToShow&&(o.currentSlide=0),i=o.currentSlide,o.destroy(!0),d.extend(o,o.initials,{currentSlide:i}),o.init(),e||o.changeSlide({data:{message:"index",index:i}},!1)},r.prototype.registerBreakpoints=function(){var e,i,t,o=this,s=o.options.responsive||null;if("array"===d.type(s)&&s.length){for(e in o.respondTo=o.options.respondTo||"window",s)if(t=o.breakpoints.length-1,s.hasOwnProperty(e)){for(i=s[e].breakpoint;0<=t;)o.breakpoints[t]&&o.breakpoints[t]===i&&o.breakpoints.splice(t,1),t--;o.breakpoints.push(i),o.breakpointSettings[i]=s[e].settings}o.breakpoints.sort(function(e,i){return o.options.mobileFirst?e-i:i-e})}},r.prototype.reinit=function(){var e=this;e.$slides=e.$slideTrack.children(e.options.slide).addClass("slick-slide"),e.slideCount=e.$slides.length,e.currentSlide>=e.slideCount&&0!==e.currentSlide&&(e.currentSlide=e.currentSlide-e.options.slidesToScroll),e.slideCount<=e.options.slidesToShow&&(e.currentSlide=0),e.registerBreakpoints(),e.setProps(),e.setupInfinite(),e.buildArrows(),e.updateArrows(),e.initArrowEvents(),e.buildDots(),e.updateDots(),e.initDotEvents(),e.cleanUpSlideEvents(),e.initSlideEvents(),e.checkResponsive(!1,!0),!0===e.options.focusOnSelect&&d(e.$slideTrack).children().on("click.slick",e.selectHandler),e.setSlideClasses("number"==typeof e.currentSlide?e.currentSlide:0),e.setPosition(),e.focusHandler(),e.paused=!e.options.autoplay,e.autoPlay(),e.$slider.trigger("reInit",[e])},r.prototype.resize=function(){var e=this;d(window).width()!==e.windowWidth&&(clearTimeout(e.windowDelay),e.windowDelay=window.setTimeout(function(){e.windowWidth=d(window).width(),e.checkResponsive(),e.unslicked||e.setPosition()},50))},r.prototype.removeSlide=r.prototype.slickRemove=function(e,i,t){var o=this;if(e="boolean"==typeof e?!0===(i=e)?0:o.slideCount-1:!0===i?--e:e,o.slideCount<1||e<0||e>o.slideCount-1)return!1;o.unload(),!0===t?o.$slideTrack.children().remove():o.$slideTrack.children(this.options.slide).eq(e).remove(),o.$slides=o.$slideTrack.children(this.options.slide),o.$slideTrack.children(this.options.slide).detach(),o.$slideTrack.append(o.$slides),o.$slidesCache=o.$slides,o.reinit()},r.prototype.setCSS=function(e){var i,t,o=this,s={};!0===o.options.rtl&&(e=-e),i="left"==o.positionProp?Math.ceil(e)+"px":"0px",t="top"==o.positionProp?Math.ceil(e)+"px":"0px",s[o.positionProp]=e,!1===o.transformsEnabled||(!(s={})===o.cssTransitions?s[o.animType]="translate("+i+", "+t+")":s[o.animType]="translate3d("+i+", "+t+", 0px)"),o.$slideTrack.css(s)},r.prototype.setDimensions=function(){var e=this;!1===e.options.vertical?!0===e.options.centerMode&&e.$list.css({padding:"0px "+e.options.centerPadding}):(e.$list.height(e.$slides.first().outerHeight(!0)*e.options.slidesToShow),!0===e.options.centerMode&&e.$list.css({padding:e.options.centerPadding+" 0px"})),e.listWidth=e.$list.width(),e.listHeight=e.$list.height(),!1===e.options.vertical&&!1===e.options.variableWidth?(e.slideWidth=Math.ceil(e.listWidth/e.options.slidesToShow),e.$slideTrack.width(Math.ceil(e.slideWidth*e.$slideTrack.children(".slick-slide").length))):!0===e.options.variableWidth?e.$slideTrack.width(5e3*e.slideCount):(e.slideWidth=Math.ceil(e.listWidth),e.$slideTrack.height(Math.ceil(e.$slides.first().outerHeight(!0)*e.$slideTrack.children(".slick-slide").length)));var i=e.$slides.first().outerWidth(!0)-e.$slides.first().width();!1===e.options.variableWidth&&e.$slideTrack.children(".slick-slide").width(e.slideWidth-i)},r.prototype.setFade=function(){var t,o=this;o.$slides.each(function(e,i){t=o.slideWidth*e*-1,!0===o.options.rtl?d(i).css({position:"relative",right:t,top:0,zIndex:o.options.zIndex-2,opacity:0}):d(i).css({position:"relative",left:t,top:0,zIndex:o.options.zIndex-2,opacity:0})}),o.$slides.eq(o.currentSlide).css({zIndex:o.options.zIndex-1,opacity:1})},r.prototype.setHeight=function(){var e=this;if(1===e.options.slidesToShow&&!0===e.options.adaptiveHeight&&!1===e.options.vertical){var i=e.$slides.eq(e.currentSlide).outerHeight(!0);e.$list.css("height",i)}},r.prototype.setOption=r.prototype.slickSetOption=function(){var e,i,t,o,s,n=this,r=!1;if("object"===d.type(arguments[0])?(t=arguments[0],r=arguments[1],s="multiple"):"string"===d.type(arguments[0])&&(t=arguments[0],o=arguments[1],r=arguments[2],"responsive"===arguments[0]&&"array"===d.type(arguments[1])?s="responsive":void 0!==arguments[1]&&(s="single")),"single"===s)n.options[t]=o;else if("multiple"===s)d.each(t,function(e,i){n.options[e]=i});else if("responsive"===s)for(i in o)if("array"!==d.type(n.options.responsive))n.options.responsive=[o[i]];else{for(e=n.options.responsive.length-1;0<=e;)n.options.responsive[e].breakpoint===o[i].breakpoint&&n.options.responsive.splice(e,1),e--;n.options.responsive.push(o[i])}r&&(n.unload(),n.reinit())},r.prototype.setPosition=function(){var e=this;e.setDimensions(),e.setHeight(),!1===e.options.fade?e.setCSS(e.getLeft(e.currentSlide)):e.setFade(),e.$slider.trigger("setPosition",[e])},r.prototype.setProps=function(){var e=this,i=document.body.style;e.positionProp=!0===e.options.vertical?"top":"left","top"===e.positionProp?e.$slider.addClass("slick-vertical"):e.$slider.removeClass("slick-vertical"),void 0===i.WebkitTransition&&void 0===i.MozTransition&&void 0===i.msTransition||!0===e.options.useCSS&&(e.cssTransitions=!0),e.options.fade&&("number"==typeof e.options.zIndex?e.options.zIndex<3&&(e.options.zIndex=3):e.options.zIndex=e.defaults.zIndex),void 0!==i.OTransform&&(e.animType="OTransform",e.transformType="-o-transform",e.transitionType="OTransition",void 0===i.perspectiveProperty&&void 0===i.webkitPerspective&&(e.animType=!1)),void 0!==i.MozTransform&&(e.animType="MozTransform",e.transformType="-moz-transform",e.transitionType="MozTransition",void 0===i.perspectiveProperty&&void 0===i.MozPerspective&&(e.animType=!1)),void 0!==i.webkitTransform&&(e.animType="webkitTransform",e.transformType="-webkit-transform",e.transitionType="webkitTransition",void 0===i.perspectiveProperty&&void 0===i.webkitPerspective&&(e.animType=!1)),void 0!==i.msTransform&&(e.animType="msTransform",e.transformType="-ms-transform",e.transitionType="msTransition",void 0===i.msTransform&&(e.animType=!1)),void 0!==i.transform&&!1!==e.animType&&(e.animType="transform",e.transformType="transform",e.transitionType="transition"),e.transformsEnabled=e.options.useTransform&&null!==e.animType&&!1!==e.animType},r.prototype.setSlideClasses=function(e){var i,t,o,s,n=this;t=n.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden","true"),n.$slides.eq(e).addClass("slick-current"),!0===n.options.centerMode?(i=Math.floor(n.options.slidesToShow/2),!0===n.options.infinite&&(i<=e&&e<=n.slideCount-1-i?n.$slides.slice(e-i,e+i+1).addClass("slick-active").attr("aria-hidden","false"):(o=n.options.slidesToShow+e,t.slice(o-i+1,o+i+2).addClass("slick-active").attr("aria-hidden","false")),0===e?t.eq(t.length-1-n.options.slidesToShow).addClass("slick-center"):e===n.slideCount-1&&t.eq(n.options.slidesToShow).addClass("slick-center")),n.$slides.eq(e).addClass("slick-center")):0<=e&&e<=n.slideCount-n.options.slidesToShow?n.$slides.slice(e,e+n.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false"):t.length<=n.options.slidesToShow?t.addClass("slick-active").attr("aria-hidden","false"):(s=n.slideCount%n.options.slidesToShow,o=!0===n.options.infinite?n.options.slidesToShow+e:e,n.options.slidesToShow==n.options.slidesToScroll&&n.slideCount-e<n.options.slidesToShow?t.slice(o-(n.options.slidesToShow-s),o+s).addClass("slick-active").attr("aria-hidden","false"):t.slice(o,o+n.options.slidesToShow).addClass("slick-active").attr("aria-hidden","false")),"ondemand"!==n.options.lazyLoad&&"anticipated"!==n.options.lazyLoad||n.lazyLoad()},r.prototype.setupInfinite=function(){var e,i,t,o=this;if(!0===o.options.fade&&(o.options.centerMode=!1),!0===o.options.infinite&&!1===o.options.fade&&(i=null,o.slideCount>o.options.slidesToShow)){for(t=!0===o.options.centerMode?o.options.slidesToShow+1:o.options.slidesToShow,e=o.slideCount;e>o.slideCount-t;e-=1)i=e-1,d(o.$slides[i]).clone(!0).attr("id","").attr("data-slick-index",i-o.slideCount).prependTo(o.$slideTrack).addClass("slick-cloned");for(e=0;e<t+o.slideCount;e+=1)i=e,d(o.$slides[i]).clone(!0).attr("id","").attr("data-slick-index",i+o.slideCount).appendTo(o.$slideTrack).addClass("slick-cloned");o.$slideTrack.find(".slick-cloned").find("[id]").each(function(){d(this).attr("id","")})}},r.prototype.interrupt=function(e){e||this.autoPlay(),this.interrupted=e},r.prototype.selectHandler=function(e){var i=d(e.target).is(".slick-slide")?d(e.target):d(e.target).parents(".slick-slide"),t=parseInt(i.attr("data-slick-index"));t||(t=0),this.slideCount<=this.options.slidesToShow?this.slideHandler(t,!1,!0):this.slideHandler(t)},r.prototype.slideHandler=function(e,i,t){var o,s,n,r,l,a,d=this;if(i=i||!1,!(!0===d.animating&&!0===d.options.waitForAnimate||!0===d.options.fade&&d.currentSlide===e))if(!1===i&&d.asNavFor(e),o=e,l=d.getLeft(o),r=d.getLeft(d.currentSlide),d.currentLeft=null===d.swipeLeft?r:d.swipeLeft,!1===d.options.infinite&&!1===d.options.centerMode&&(e<0||e>d.getDotCount()*d.options.slidesToScroll))!1===d.options.fade&&(o=d.currentSlide,!0!==t?d.animateSlide(r,function(){d.postSlide(o)}):d.postSlide(o));else if(!1===d.options.infinite&&!0===d.options.centerMode&&(e<0||e>d.slideCount-d.options.slidesToScroll))!1===d.options.fade&&(o=d.currentSlide,!0!==t?d.animateSlide(r,function(){d.postSlide(o)}):d.postSlide(o));else{if(d.options.autoplay&&clearInterval(d.autoPlayTimer),s=o<0?d.slideCount%d.options.slidesToScroll!=0?d.slideCount-d.slideCount%d.options.slidesToScroll:d.slideCount+o:o>=d.slideCount?d.slideCount%d.options.slidesToScroll!=0?0:o-d.slideCount:o,d.animating=!0,d.$slider.trigger("beforeChange",[d,d.currentSlide,s]),n=d.currentSlide,d.currentSlide=s,d.setSlideClasses(d.currentSlide),d.options.asNavFor&&(a=(a=d.getNavTarget()).slick("getSlick")).slideCount<=a.options.slidesToShow&&a.setSlideClasses(d.currentSlide),d.updateDots(),d.updateArrows(),!0===d.options.fade)return!0!==t?(d.fadeSlideOut(n),d.fadeSlide(s,function(){d.postSlide(s)})):d.postSlide(s),void d.animateHeight();!0!==t?d.animateSlide(l,function(){d.postSlide(s)}):d.postSlide(s)}},r.prototype.startLoad=function(){var e=this;!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&(e.$prevArrow.hide(),e.$nextArrow.hide()),!0===e.options.dots&&e.slideCount>e.options.slidesToShow&&e.$dots.hide(),e.$slider.addClass("slick-loading")},r.prototype.swipeDirection=function(){var e,i,t,o,s=this;return e=s.touchObject.startX-s.touchObject.curX,i=s.touchObject.startY-s.touchObject.curY,t=Math.atan2(i,e),(o=Math.round(180*t/Math.PI))<0&&(o=360-Math.abs(o)),o<=45&&0<=o?!1===s.options.rtl?"left":"right":o<=360&&315<=o?!1===s.options.rtl?"left":"right":135<=o&&o<=225?!1===s.options.rtl?"right":"left":!0===s.options.verticalSwiping?35<=o&&o<=135?"down":"up":"vertical"},r.prototype.swipeEnd=function(e){var i,t,o=this;if(o.dragging=!1,o.swiping=!1,o.scrolling)return o.scrolling=!1;if(o.interrupted=!1,o.shouldClick=!(10<o.touchObject.swipeLength),void 0===o.touchObject.curX)return!1;if(!0===o.touchObject.edgeHit&&o.$slider.trigger("edge",[o,o.swipeDirection()]),o.touchObject.swipeLength>=o.touchObject.minSwipe){switch(t=o.swipeDirection()){case"left":case"down":i=o.options.swipeToSlide?o.checkNavigable(o.currentSlide+o.getSlideCount()):o.currentSlide+o.getSlideCount(),o.currentDirection=0;break;case"right":case"up":i=o.options.swipeToSlide?o.checkNavigable(o.currentSlide-o.getSlideCount()):o.currentSlide-o.getSlideCount(),o.currentDirection=1}"vertical"!=t&&(o.slideHandler(i),o.touchObject={},o.$slider.trigger("swipe",[o,t]))}else o.touchObject.startX!==o.touchObject.curX&&(o.slideHandler(o.currentSlide),o.touchObject={})},r.prototype.swipeHandler=function(e){var i=this;if(!(!1===i.options.swipe||"ontouchend"in document&&!1===i.options.swipe||!1===i.options.draggable&&-1!==e.type.indexOf("mouse")))switch(i.touchObject.fingerCount=e.originalEvent&&void 0!==e.originalEvent.touches?e.originalEvent.touches.length:1,i.touchObject.minSwipe=i.listWidth/i.options.touchThreshold,!0===i.options.verticalSwiping&&(i.touchObject.minSwipe=i.listHeight/i.options.touchThreshold),e.data.action){case"start":i.swipeStart(e);break;case"move":i.swipeMove(e);break;case"end":i.swipeEnd(e)}},r.prototype.swipeMove=function(e){var i,t,o,s,n,r,l=this;return n=void 0!==e.originalEvent?e.originalEvent.touches:null,!(!l.dragging||l.scrolling||n&&1!==n.length)&&(i=l.getLeft(l.currentSlide),l.touchObject.curX=void 0!==n?n[0].pageX:e.clientX,l.touchObject.curY=void 0!==n?n[0].pageY:e.clientY,l.touchObject.swipeLength=Math.round(Math.sqrt(Math.pow(l.touchObject.curX-l.touchObject.startX,2))),r=Math.round(Math.sqrt(Math.pow(l.touchObject.curY-l.touchObject.startY,2))),!l.options.verticalSwiping&&!l.swiping&&4<r?!(l.scrolling=!0):(!0===l.options.verticalSwiping&&(l.touchObject.swipeLength=r),t=l.swipeDirection(),void 0!==e.originalEvent&&4<l.touchObject.swipeLength&&(l.swiping=!0,e.preventDefault()),s=(!1===l.options.rtl?1:-1)*(l.touchObject.curX>l.touchObject.startX?1:-1),!0===l.options.verticalSwiping&&(s=l.touchObject.curY>l.touchObject.startY?1:-1),o=l.touchObject.swipeLength,(l.touchObject.edgeHit=!1)===l.options.infinite&&(0===l.currentSlide&&"right"===t||l.currentSlide>=l.getDotCount()&&"left"===t)&&(o=l.touchObject.swipeLength*l.options.edgeFriction,l.touchObject.edgeHit=!0),!1===l.options.vertical?l.swipeLeft=i+o*s:l.swipeLeft=i+o*(l.$list.height()/l.listWidth)*s,!0===l.options.verticalSwiping&&(l.swipeLeft=i+o*s),!0!==l.options.fade&&!1!==l.options.touchMove&&(!0===l.animating?(l.swipeLeft=null,!1):void l.setCSS(l.swipeLeft))))},r.prototype.swipeStart=function(e){var i,t=this;if(t.interrupted=!0,1!==t.touchObject.fingerCount||t.slideCount<=t.options.slidesToShow)return!(t.touchObject={});void 0!==e.originalEvent&&void 0!==e.originalEvent.touches&&(i=e.originalEvent.touches[0]),t.touchObject.startX=t.touchObject.curX=void 0!==i?i.pageX:e.clientX,t.touchObject.startY=t.touchObject.curY=void 0!==i?i.pageY:e.clientY,t.dragging=!0},r.prototype.unfilterSlides=r.prototype.slickUnfilter=function(){var e=this;null!==e.$slidesCache&&(e.unload(),e.$slideTrack.children(this.options.slide).detach(),e.$slidesCache.appendTo(e.$slideTrack),e.reinit())},r.prototype.unload=function(){var e=this;d(".slick-cloned",e.$slider).remove(),e.$dots&&e.$dots.remove(),e.$prevArrow&&e.htmlExpr.test(e.options.prevArrow)&&e.$prevArrow.remove(),e.$nextArrow&&e.htmlExpr.test(e.options.nextArrow)&&e.$nextArrow.remove(),e.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden","true").css("width","")},r.prototype.unslick=function(e){this.$slider.trigger("unslick",[this,e]),this.destroy()},r.prototype.updateArrows=function(){var e=this;Math.floor(e.options.slidesToShow/2),!0===e.options.arrows&&e.slideCount>e.options.slidesToShow&&!e.options.infinite&&(e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false"),e.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false"),0===e.currentSlide?(e.$prevArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$nextArrow.removeClass("slick-disabled").attr("aria-disabled","false")):e.currentSlide>=e.slideCount-e.options.slidesToShow&&!1===e.options.centerMode?(e.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")):e.currentSlide>=e.slideCount-1&&!0===e.options.centerMode&&(e.$nextArrow.addClass("slick-disabled").attr("aria-disabled","true"),e.$prevArrow.removeClass("slick-disabled").attr("aria-disabled","false")))},r.prototype.updateDots=function(){var e=this;null!==e.$dots&&(e.$dots.find("li").removeClass("slick-active").end(),e.$dots.find("li").eq(Math.floor(e.currentSlide/e.options.slidesToScroll)).addClass("slick-active"))},r.prototype.visibility=function(){this.options.autoplay&&(document[this.hidden]?this.interrupted=!0:this.interrupted=!1)},d.fn.slick=function(){var e,i,t=this,o=arguments[0],s=Array.prototype.slice.call(arguments,1),n=t.length;for(e=0;e<n;e++)if("object"==typeof o||void 0===o?t[e].slick=new r(t[e],o):i=t[e].slick[o].apply(t[e].slick,s),void 0!==i)return i;return t}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
